import requests
from ast import literal_eval

mainurl = 'https://app.sycamoreschool.com/api/v1'
url1 = mainurl + '/Me'
listClasses = mainurl + '/School/2132/Classes'
listFamiliesUrl = mainurl + '/School/2132/Families'
listFamiliesUrl2 = mainurl + '/School/2132/Directory/'
url4 = mainurl + '/Family/1000648'
url4b = mainurl + '/Family/1000648/ServiceLogs'
#url5 = mainurl + '/Class/180608/Directory';
url5 = mainurl + '/Class/336207/Directory';


class SycamoreRecordChecker:
    def __init__(self):
        self.token = "4fd7323695b91cf144578dba01e010e3"
        self.mainurl = 'https://app.sycamoreschool.com/api/v1'
        self.url = self.mainurl + '/Me'
        self.listFamiliesUrl = self.mainurl + '/School/2132/Families'
        
    def populateFamilyRecords(self):
        response = requests.get(listFamiliesUrl, headers={'Authorization': 'Bearer ' + self.token })
        print ("*******populate family records ***********")
        print ("code:"+ str(response.status_code))
        print ("******************")
        listFamiliesInfo = response.text
        self.listFamilies = literal_eval(listFamiliesInfo)
        
    def getIndividualFamilyRecord(self, familyID):
        familyURL = 'https://app.sycamoreeducation.com/api/v1/School/2132/Directory/1348309'
        print("family URL={0}".format(familyURL))
        response = requests.get(familyURL, headers={'Authorization': 'Bearer ' + self.token })
        print ("******** get individual family record **********")
        print ("code:"+ str(response.status_code))
        print ("******************")
        familyInfo = response.text
        return familyInfo
        
    
        
    def checkNamingConvention(self):
        k = 0
        while (k < len(self.listFamilies)):
            #print(self.listFamilies[k]['ID'], self.listFamilies[k]['Name'])
            #familyInfo = getIndividualFamilyRecord(self.listFamilies[k]['ID'])
            familyInfo = self.getIndividualFamilyRecord('1348309')
            #print("familyInfo={0}".format(familyInfo))
            k = k+1
        # Dynamic family contact report will give primary and secondary names individually.
        # https://app.sycamoreeducation.com/api/v1/School/:schoolid/Directory/:id this should be usable as well
        # The id here is a family id which I can get from self.listFamilies['ID]
        

if __name__ == '__main__':
    checker = SycamoreRecordChecker()
    checker.populateFamilyRecords()
    checker.checkNamingConvention()